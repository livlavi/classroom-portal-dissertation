@startuml
!theme plain
title 1. Core User & Role Management

class Users {
  + id: INT {PK}
  --
  username: VARCHAR(50) {Unique}
  password: VARCHAR(255)
  email: VARCHAR(100) {Unique}
  first_name: VARCHAR(50)
  last_name: VARCHAR(50)
  role: ENUM('admin', 'teacher', 'parent', 'student')
  created_at: TIMESTAMP
}

class Teachers {
  + id: INT {PK}
  user_id: INT {FK} {Unique}
  --
  first_name: VARCHAR(50)
  last_name: VARCHAR(50)
  teacher_number: VARCHAR(20) {Unique}
  address: TEXT
  email: VARCHAR(100) {Unique}
  telephone: VARCHAR(20)
  subject_taught: VARCHAR(100)
}

class Parents {
  + id: INT {PK}
  user_id: INT {FK} {Unique}
  --
  first_name: VARCHAR(50)
  last_name: VARCHAR(50)
  parent_type: ENUM('mother', 'father', 'guardian')
  email: VARCHAR(100) {Unique}
  home_address: TEXT
  telephone: VARCHAR(20)
  child_full_name: VARCHAR(100)
}

class Students {
  + id: INT {PK}
  user_id: INT {FK} {Unique}
  --
  first_name: VARCHAR(50)
  last_name: VARCHAR(50)
  student_number: VARCHAR(20) {Unique}
  mother_name: VARCHAR(100)
  father_name: VARCHAR(100)
  year_of_study: INT
  main_teacher: VARCHAR(100)
  address: TEXT
  email: VARCHAR(100) {Unique}
}

class Admins {
  + id: INT {PK}
  user_id: INT {FK} {Unique}
  --
  first_name: VARCHAR(50)
  last_name: VARCHAR(50)
  email: VARCHAR(100) {Unique}
  telephone: VARCHAR(20)
}

class ProfilePhotos {
  + id: INT {PK}
  user_id: INT {FK} {Unique}
  --
  photo_path: VARCHAR(255)
  created_at: TIMESTAMP
}

class UniqueCodes {
  + id: INT {PK}
  --
  code: VARCHAR(50) {Unique}
  role: ENUM('teacher', 'parent', 'student')
  email: VARCHAR(100)
  first_name: VARCHAR(50)
  last_name: VARCHAR(50)
  used: BOOLEAN
  created_at: TIMESTAMP
}

' Relationships for core user management
Users "1" -- "1" Teachers : user_id
Users "1" -- "1" Parents : user_id
Users "1" -- "1" Students : user_id
Users "1" -- "1" Admins : user_id
Users "1" -- "0..1" ProfilePhotos : user_id

' Parent-Student junction table (placed here as it defines a core user relationship)
class Parent_Student {
  + parent_id: INT {PK} {FK}
  + student_id: INT {PK} {FK}
}

Parents "1" -- "M" Parent_Student : parent_id
Students "1" -- "M" Parent_Student : student_id (FK to Users.id for student)

' Note about Student FK in Parent_Student: It points to Users.id as per SQL,
' but logically represents a student.
note "Parent_Student.student_id references Users.id, representing the student user." as N1
N1 .. Parent_Student

@enduml